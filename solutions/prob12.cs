// What is the value of the first triangle number to have over five hundred divisors?

/*
 * The sequence of triangle numbers is generated by adding the natural numbers.
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28
 * 
 * This is quite the problem requiring a lot of mathematical prowess, so I'm gonna work on this for... quite a bit
 * ...
 * I was gonna do a bunch of shit involving the Sieve, the coprime property, prime factorisation... but
 * Why not just brute force it?
 */
using System;
namespace euler {
    class prob12 {
        static void Main(string[] args) {
            new prob12().TrialDivision();
        }
        public void TrialDivision() {
            int num = 0, i = 1;
            while(NumberOfDivisors(num) < 500) {
                num += i;
                i++;
            }
            Console.WriteLine($"{num}"); // :)
        }
        private int NumberOfDivisors(int n) {
            int divisors = 0, sqrt = (int) Math.Sqrt(n);
            for(int i = 1; i<= sqrt; i++){
                if(n % i == 0){
                    divisors += 2;
                }
            }
            if (Math.Pow(sqrt, 2) == n) {
                divisors--;
            }  
            return divisors;
        }
    }
}